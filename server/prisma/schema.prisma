//https://prismaliser.app/ to visualize the models.
generator client {
  provider = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id           String    @id @unique @default(uuid())
  description  String?
  participants SessionParticipants[]
  events       Event[]
  startTime    DateTime? @default(now())
  stopTime     DateTime?
  startSceneTime DateTime?
  stopSceneTime DateTime?
  deleted      Boolean? @default(false)
  lastmodified DateTime? @default(now())
  ipaddr       String?
  roadmap      String?
  evaluation   String?
  scene        Scene?    @relation(fields: [sceneId], references: [id])
  sceneId      String?
}

model User {
  id        String   @id @unique @default(uuid())
  firstname String
  lastname  String
  addition  String?
  email     String  @unique
  password  String
  role      Int      @default(0)
  session   SessionParticipants[]
  event     Event[]
  deleted      Boolean? @default(false)
  lastmodified DateTime? @default(now())
}

model Scene {
  id          String     @id @unique @default(uuid())
  name        String
  description String
  sessions    Session[]
  evidences   Evidence[]
  deleted      Boolean? @default(false)
  lastmodified DateTime? @default(now())
}

model Evidence {
  id      String  @id @unique @default(uuid())
  x       Float
  y       Float
  z       Float
  type    Int
  scene   Scene?  @relation(fields: [sceneId], references: [id], onDelete: Cascade)
  sceneId String?
  events  Event[]
  deleted      Boolean? @default(false)
  lastmodified DateTime? @default(now())
}

model Event {
  id         String    @id @unique @default(uuid())
  action     Int?
  timeStamp  DateTime  @default(now())
  user       User?     @relation(fields: [userId], references: [id])
  userId     String?
  session    Session   @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId  String
  evidence   Evidence? @relation(fields: [evidenceId], references: [id])
  evidenceId String?
  light      Int?
  filter     Int?
  deleted      Boolean? @default(false)
  lastmodified DateTime? @default(now())
}

model SessionParticipants {
  session Session @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId String
  user User @relation(fields: [userId], references: [id])
  userId String
  @@id([sessionId, userId])
  deleted      Boolean? @default(false)
  lastmodified DateTime? @default(now())
}